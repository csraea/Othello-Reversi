#pragma checksum "C:\Users\csrae\OneDrive\Desktop\reversi2020-master\ReversiWeb\Views\Othello\MultiPlayerGameSettings.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7ce2c57bbbd97e368cd85d8f46672df4654b9b43"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Othello_MultiPlayerGameSettings), @"mvc.1.0.view", @"/Views/Othello/MultiPlayerGameSettings.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\csrae\OneDrive\Desktop\reversi2020-master\ReversiWeb\Views\_ViewImports.cshtml"
using ReversiWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\csrae\OneDrive\Desktop\reversi2020-master\ReversiWeb\Views\_ViewImports.cshtml"
using ReversiWeb.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\csrae\OneDrive\Desktop\reversi2020-master\ReversiWeb\Views\Othello\MultiPlayerGameSettings.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7ce2c57bbbd97e368cd85d8f46672df4654b9b43", @"/Views/Othello/MultiPlayerGameSettings.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7985fd2247920b1ab4adf4428649d066ab6a65c0", @"/Views/_ViewImports.cshtml")]
    public class Views_Othello_MultiPlayerGameSettings : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Othello", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "AdjustMultiPlayer", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("z-index: 2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\csrae\OneDrive\Desktop\reversi2020-master\ReversiWeb\Views\Othello\MultiPlayerGameSettings.cshtml"
  
    ViewData["Title"] = "MultiPlayerGameSettings";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7ce2c57bbbd97e368cd85d8f46672df4654b9b435382", async() => {
                WriteLiteral(@"
    <style>

        body {
            overflow-y: hidden;
        }

        .context {
            width: 100%;
            position: absolute;
            top: 50vh;
        }

            .context h1 {
                text-align: center;
                color: #fff;
                font-size: 50px;
            }


        .area {
            /*background: #4e54c8;
                background: -webkit-linear-gradient(to left, #8f94fb, #4e54c8);*/
            width: 100%;
            height: 100vh;
        }

        .circles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: -1;
        }

            .circles li {
                position: absolute;
                display: block;
                list-style: none;
                width: 20px;
                height: 20px;
                background: rgba(255, 255, 255, 0.2);
            ");
                WriteLiteral(@"    animation: animate 25s linear infinite;
                bottom: -150px;
                z-index: -1;
            }

                .circles li:nth-child(1) {
                    left: 25%;
                    width: 80px;
                    height: 80px;
                    animation-delay: 0s;
                    background: rgba(255, 255, 0, 0.2);
                }


                .circles li:nth-child(2) {
                    left: 10%;
                    width: 50px;
                    height: 50px;
                    animation-delay: 2s;
                    animation-duration: 12s;
                    background: rgba(125, 125, 255, 0.2);
                }

                .circles li:nth-child(3) {
                    left: 70%;
                    width: 20px;
                    height: 20px;
                    animation-delay: 4s;
                    background: rgba(255, 0, 255, 0.2);
                }

                .circles li:nth-child(4) {
          ");
                WriteLiteral(@"          left: 40%;
                    width: 60px;
                    height: 60px;
                    animation-delay: 0s;
                    animation-duration: 18s;
                }

                .circles li:nth-child(5) {
                    left: 65%;
                    width: 20px;
                    height: 20px;
                    animation-delay: 0s;
                    background: rgba(0, 255, 255, 0.2);
                }

                .circles li:nth-child(6) {
                    left: 75%;
                    width: 110px;
                    height: 110px;
                    animation-delay: 3s;
                    background: rgba(255, 0, 0, 0.2);
                }

                .circles li:nth-child(7) {
                    left: 35%;
                    width: 130px;
                    height: 130px;
                    animation-delay: 7s;
                    background: rgba(0, 255, 0, 0.2);
                }

                .circles li:n");
                WriteLiteral(@"th-child(8) {
                    left: 50%;
                    width: 25px;
                    height: 25px;
                    animation-delay: 15s;
                    animation-duration: 45s;
                    background: rgba(255, 100, 25, 0.2);
                }

                .circles li:nth-child(9) {
                    left: 20%;
                    width: 15px;
                    height: 15px;
                    animation-delay: 2s;
                    animation-duration: 35s;
                    background: rgba(0, 0, 255, 0.2);
                }

                .circles li:nth-child(10) {
                    left: 85%;
                    width: 150px;
                    height: 150px;
                    animation-delay: 0s;
                    animation-duration: 30s;
                    background: rgba(111, 80, 255, 0.2);
                }

                .circles li:nth-child(11) {
                    left: 5%;
                    width: 20px;
      ");
                WriteLiteral(@"              height: 20px;
                    animation-delay: 0s;
                    animation-duration: 19s;
                    background: rgba(111, 255, 255, 0.2);
                }

                .circles li:nth-child(12) {
                    left: 0%;
                    width: 90px;
                    height: 90px;
                    animation-delay: 10s;
                    animation-duration: 12s;
                    background: rgba(255, 255, 0, 0.2);
                }

                .circles li:nth-child(13) {
                    left: 55%;
                    width: 10px;
                    height: 10px;
                    animation-delay: 5s;
                    animation-duration: 25s;
                    background: rgba(0, 255, 255, 0.2);
                }


                .circles li:nth-child(14) {
                    left: 95%;
                    width: 35px;
                    height: 35px;
                    animation-delay: 8s;
             ");
                WriteLiteral(@"       animation-duration: 10s;
                }

                .circles li:nth-child(15) {
                    left: 91%;
                    width: 15px;
                    height: 15px;
                    animation-delay: 10s;
                    animation-duration: 41s;
                    background: rgba(255, 50, 255, 0.2);
                }

                .circles li:nth-child(16) {
                    left: 5%;
                    width: 18px;
                    height: 18px;
                    animation-delay: 14s;
                    animation-duration: 29s;
                    background: rgba(255, 0, 0, 0.2);
                }



        ");
                WriteLiteral(@"@keyframes animate {

            0% {
                transform: translateY(0) rotate(0deg);
                opacity: 1;
                border-radius: 0;
            }

            100% {
                transform: translateY(-1000px) rotate(720deg);
                opacity: 0;
                border-radius: 50%;
            }
        }


        ");
                WriteLiteral(@"@media screen and (max-width: 767px) {
            body {
                overflow-y: visible;
            }
        }



        input[type=range].BSize {
            -webkit-appearance: none;
            width: 100%;
            margin: 11.75px 0;
        }

            input[type=range].BSize:focus {
                outline: none;
            }

            input[type=range].BSize::-webkit-slider-runnable-track {
                width: 100%;
                height: 6.5px;
                cursor: pointer;
                box-shadow: 1px 1px 1px rgba(0, 0, 0, 0), 0px 0px 1px rgba(13, 13, 13, 0);
                background: #00ffe6;
                border-radius: 0px;
                border: 0px solid #000000;
            }

            input[type=range].BSize::-webkit-slider-thumb {
                box-shadow: 0px 0px 0px #ffffff, 0px 0px 0px #ffffff;
                border: 1.9px solid #000000;
                height: 30px;
                width: 30px;
                border");
                WriteLiteral(@"-radius: 50px;
                background: #ffffff;
                cursor: pointer;
                -webkit-appearance: none;
                margin-top: -11.75px;
            }

            input[type=range].BSize:focus::-webkit-slider-runnable-track {
                background: #00ffe6;
            }

            input[type=range].BSize::-moz-range-track {
                width: 100%;
                height: 6.5px;
                cursor: pointer;
                box-shadow: 1px 1px 1px rgba(0, 0, 0, 0), 0px 0px 1px rgba(13, 13, 13, 0);
                background: #00ffe6;
                border-radius: 0px;
                border: 0px solid #000000;
            }

            input[type=range].BSize::-moz-range-thumb {
                box-shadow: 0px 0px 0px #ffffff, 0px 0px 0px #ffffff;
                border: 1.9px solid #000000;
                height: 30px;
                width: 30px;
                border-radius: 50px;
                background: #ffffff;
              ");
                WriteLiteral(@"  cursor: pointer;
            }

            input[type=range].BSize::-ms-track {
                width: 100%;
                height: 6.5px;
                cursor: pointer;
                background: transparent;
                border-color: transparent;
                color: transparent;
            }

            input[type=range].BSize::-ms-fill-lower {
                background: #00ffe6;
                border: 0px solid #000000;
                border-radius: 0px;
                box-shadow: 1px 1px 1px rgba(0, 0, 0, 0), 0px 0px 1px rgba(13, 13, 13, 0);
            }

            input[type=range].BSize::-ms-fill-upper {
                background: #00ffe6;
                border: 0px solid #000000;
                border-radius: 0px;
                box-shadow: 1px 1px 1px rgba(0, 0, 0, 0), 0px 0px 1px rgba(13, 13, 13, 0);
            }

            input[type=range].BSize::-ms-thumb {
                box-shadow: 0px 0px 0px #ffffff, 0px 0px 0px #ffffff;
              ");
                WriteLiteral(@"  border: 1.9px solid #000000;
                height: 30px;
                width: 30px;
                border-radius: 50px;
                background: #ffffff;
                cursor: pointer;
                height: 6.5px;
            }

            input[type=range].BSize:focus::-ms-fill-lower {
                background: #00ffe6;
            }

            input[type=range].BSize:focus::-ms-fill-upper {
                background: #00ffe6;
            }

        .gs {
            padding: 10px 20px 11px !important;
            font-size: 21px !important;
            background-color: #8cff80;
            font-weight: bold;
            text-shadow: 1px 1px #8cff80;
            color: #ffffff;
            border-radius: 100px;
            -moz-border-radius: 100px;
            -webkit-border-radius: 100px;
            border: 1px solid #8cff80;
            cursor: pointer;
            box-shadow: 0 1px 0 rgba(255, 255, 255, 0.5) inset;
            -moz-box-shadow: 0 1px 0 r");
                WriteLiteral("gba(255, 255, 255, 0.5) inset;\r\n            -webkit-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.5) inset;\r\n        }\r\n    </style>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7ce2c57bbbd97e368cd85d8f46672df4654b9b4317155", async() => {
                WriteLiteral("\r\n\r\n\r\n    <div class=\"container\">\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7ce2c57bbbd97e368cd85d8f46672df4654b9b4317463", async() => {
                    WriteLiteral(@"


            <div class=""row"">

                <div class=""col-md"">
                    <div class=""picker"">
                        <div style=""margin-left: 5%"">Red</div> <input class=""sl"" type=""range"" min=""0"" max=""255"" step=""1"" id=""red"" name=""red"" value=""255"">
                        <div style=""margin-left: 5%"">Green</div> <input class=""sl"" type=""range"" min=""0"" max=""255"" step=""1"" id=""green"" name=""green"" value=""0"">
                        <div style=""margin-left: 5%"">Blue</div> <input class=""sl"" type=""range"" min=""0"" max=""255"" step=""1"" id=""blue"" name=""blue"" value=""0"">

                        <div id=""display"" style=""margin-left: auto; margin-right: auto;""><b>Player 1</b></div>

                    </div>
                    <script type=""text/javascript"">
                        var input = document.querySelectorAll(""input"");
                        for (var i = 0; i < input.length; i++) {
                            input[i].addEventListener(""input"",
                                fun");
                    WriteLiteral(@"ction () {
                                    var red = document.getElementById(""red"").value,
                                        green = document.getElementById(""green"").value,
                                        blue = document.getElementById(""blue"").value;
                                    var display = document.getElementById(""display"");
                                    display.style.background = ""rgb("" + red + "", "" + green + "", "" + blue + "")"";
                                    if ((red > 200 && blue > 200) || (red > 200 && green > 200) || (green > 200 && blue > 180)) display.style.color = ""black"";
                                    else display.style.color = ""#ffffff"";
                                });
                        }
                    </script>
                </div>

                <div class=""col-md"">

                    <div class=""picker"">
                        <div style=""margin-left: 5%"">Red</div> <input class=""sl"" type=""range"" min=""0"" max=""255"" s");
                    WriteLiteral(@"tep=""1"" id=""red1"" name=""red1"" value=""0"">
                        <div style=""margin-left: 5%"">Green</div> <input class=""sl"" type=""range"" min=""0"" max=""255"" step=""1"" id=""green1"" name=""green1"" value=""68"">
                        <div style=""margin-left: 5%"">Blue</div> <input class=""sl"" type=""range"" min=""0"" max=""255"" step=""1"" id=""blue1"" name=""blue1"" value=""255"">

                        <div id=""display1"" style=""margin-left: auto; margin-right: auto;""><b>Player 2</b></div>

                    </div>

                    <script type=""text/javascript"">
                        var input = document.querySelectorAll(""input"");
                        for (var i = 0; i < input.length; i++) {
                            input[i].addEventListener(""input"",
                                function () {
                                    var red = document.getElementById(""red1"").value,
                                        green = document.getElementById(""green1"").value,
                                  ");
                    WriteLiteral(@"      blue = document.getElementById(""blue1"").value;
                                    var display = document.getElementById(""display1"");
                                    display.style.background = ""rgb("" + red + "", "" + green + "", "" + blue + "")"";
                                    if ((red > 200 && blue > 200) || (red > 200 && green > 200) || (green > 200 && blue > 180)) display.style.color = ""black"";
                                    else display.style.color = ""#ffffff"";
                                });
                        }
                    </script>

                </div>
            </div>

            <div class=""row"">
                <div class=""col-sm"">
                    <div class=""name"" style=""margin: 5%; margin-left: 10%; margin-right: 10%"">
                        <label for=""name"" style=""font-size: 24px;"">First player name:</label><br>
                        <input type=""text"" name=""name"" id=""name"" size=""32"" title=""max. 32 characters"" required spellcheck=""true");
                    WriteLiteral(@""" lang=""en"" autocomplete=""on""
                               placeholder=""Hero"" style=""border-radius: 10px; text-align: center; font-size: 24px; font-family: Courier, monospace; font-weight: bold; box-sizing: border-box;	
width: 100%;"" /><br>
       ");
                    WriteLiteral(@"             </div>
                </div>
                <div class=""col-sm"">
                    <div class=""name"" style=""margin: 5%; margin-left: 10%; margin-right: 10%"">
                        <label for=""name"" style=""font-size: 24px;"">Second player name:</label><br>
                        <input type=""text"" name=""name1"" id=""name1"" size=""32"" title=""max. 32 characters"" required spellcheck=""true"" lang=""en"" autocomplete=""on""
                               placeholder=""Hero"" style=""border-radius: 10px; text-align: center; font-size: 24px; font-family: Courier, monospace; font-weight: bold; box-sizing: border-box;	
                                                                                                                                                                                                                                                                                                                                                                                                        ");
                    WriteLiteralwidth: 100%;"" /><br>
                    </div>
                </div>
            </div>

            <div class=""row"">
                <div class=""col-sm"">
                    <div class=""fl"" style=""margin: 10%; margin-left: 10%"">
                        <p style=""margin-left: auto; margin-right: auto; font-weight: bold; font-size: 18px"">BOARD SIZE &nbsp;: &nbsp;<span id=""demo"" style=""font-size: 24px""></span></p>
        ");
                    WriteLiteral(@"                <input class=""BSize"" type=""range"" min=""4"" max=""24"" step=""2"" id=""board"" name=""boardSize"" value=""8"" style=""border-color: rgba(0, 0, 0, 0);"">
                        <script>
                            var slider = document.getElementById(""board"");
                            var output = document.getElementById(""demo"");
                            output.innerHTML = slider.value;

                            slider.oninput = function () {
                                output.innerHTML = this.value;
                            }
                        </script>
                    </div>
                    
                    <div style=""text-align: center;"">
                        <input type=""submit"" value=""PLAY"" class=""gs"" style=""border: 1px solid #8cff80; color: rgb(60, 60, 60);"" />
                    </div>
                </div>
            </div>




        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

        <ul class=""circles"">
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
        </ul>



    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
